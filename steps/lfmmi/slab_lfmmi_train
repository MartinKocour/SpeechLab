#!/bin/sh -e

. $SLAB_ROOT/utils/misc.sh

#######################################################################
# Options

topo_speech_unit=$SLAB_ROOT/tools/lfmmi/conf/hmm_speechunit.toml
topo_nonspeech_unit=$SLAB_ROOT/tools/lfmmi/conf/hmm_nonspeechunit.toml
use_gpu=false
nworkers=1 # currently this option is not taken into account.
checkpoint_dir=checkpoints

#######################################################################

show_usage() {
    echo "usage: $(basename $0) [--checkpoint-dir DIR] [--use-gpu true|false] "
    echo "                        modelfile config modelconfig trainfea devfea"
    echo "                        train_numfsm dev_numfsm denfsm initmodel"
}

show_help() {
    show_usage
    echo ""
    echo "Train a neural network using LF-MMI objective function."
    echo ""
    echo "  --checkpoint-dir       directory where to store checkpoints (default: $checkpoint_dir)"
    echo "  -h, --help             show this help message"
    echo "  --njobs                number of parallel jobs to compile the FSMs (default: $njobs)"
    echo "  --use-gpu              use a GPU to train the model (default: $use_gpu)"
}

. $SLAB_ROOT/utils/parse_options.sh

if [ $# -ne 9 ]; then
    show_usage 1>&2
    exit 1
fi

modelfile=$1
config=$2
modelconfig=$3
trainfea=$4
devfea=$5
train_numfsm=$6
dev_numfsm=$7
denfsm=$8
initmodel=$9

# Check if there is a checkpoint.
last_ckpt=$checkpoint_dir/last.jld2
[ -f $last_ckpt ] && ckpt_opts="--from-checkpoint $last_ckpt"

$use_gpu && gpu_opt="--use-gpu"

if [ ! -f $checkpoint_dir/.done ]; then
    JULIA_CUDA_VERSION=10.2 \
    julia -t $((nworkers+1)) --project=$SLAB_ROOT $SLAB_ROOT/steps/lfmmi/scripts/train.jl \
        $ckpt_opts \
        --checkpoint-dir $checkpoint_dir \
        $gpu_opt \
        $modelfile \
        $config \
        $modelconfig \
        $trainfea \
        $devfea \
        $train_numfsm \
        $dev_numfsm \
        $denfsm \
        $initmodel
    date > $checkpoint_dir/.done
else
    echo "Model already trained (best model stored in $checkpoint_dir/best.jld2)"
fi

