#!/bin/sh -e

# SPDX-License-Identifier: MIT

. $SLAB_ROOT/utils/misc.sh

#######################################################################
# Options

topo_speech_unit=$SLAB_ROOT/tools/lfmmi/conf/hmm_speechunit.toml
topo_nonspeech_unit=$SLAB_ROOT/tools/lfmmi/conf/hmm_nonspeechunit.toml
use_gpu=false
njobs=4
nworkers=4
checkpoint_dir=checkpoints
from_checkpoint=""

#######################################################################

show_usage() {
    echo "usage: $(basename $0) [--njobs N] [--nworkers W] [--from-checkpoint PATH]"
    echo "                        [--checkpoint-dir DIR] [--use-gpu true|false] "
    echo "                        modelfile config modelconfig trainfea devfea"
    echo "                        train_numfsm dev_numfsm denfsm initmodel out-dir"
}

show_help() {
    show_usage
    echo ""
    echo "Training a neural network using LF-MMI."
    echo ""
    echo "  --checkpoint-dir       directory where to store checkpoints (default: $checkpoint_dir)"
    echo " --from-checkpoint       start training from the given checkpoint file (default: $from_checkpoint)"
    echo "  --help -h              show this help message"
    echo "  --njobs                number of parallel jobs to comile the FSMs (default: $njobs)"
    echo "  --nworkers             number of parallel workers for data loading (default: $nworkers)"
    echo "  --use-gpu              use a GPU to train the model (default: $use_gpu)"
}

. $SLAB_ROOT/utils/parse_options.sh

if [ $# -ne 10 ]; then
    show_usage 1>&2
    exit 1
fi

modelfile=$1
config=$2
modelconfig=$3
trainfea=$4
devfea=$5
train_numfsm=$6
dev_numfsm=$7
denfsm=$8
initmodel=$9
odir=$10

$use_gpu && gpu_opt="--use-gpu"
JULIA_DEBUG=Main JULIA_CUDA_VERSION=10.2 \
julia -t $((nworkers+1)) --project=$SLAB_ROOT $SLAB_ROOT/steps/lfmmi/scripts/train.jl \
    --from-checkpoint "$from_checkpoint" \
    --checkpoint-dir $checkpoint_dir \
    $gpu_opt \
    $modelfile \
    $config \
    $modelconfig \
    $trainfea \
    $devfea \
    $train_numfsm \
    $dev_numfsm \
    $denfsm \
    $initmodel \
    $odir

