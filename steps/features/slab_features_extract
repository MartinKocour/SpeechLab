#!/bin/sh -e
cmd=$(basename $0)

# SPDX-License-Identifier: MIT

. $SLAB_ROOT/utils/misc.sh

#######################################################################
# Options

compression=0
njobs=1
logdir=$PWD

#######################################################################

show_usage() {
    echo "usage: $(basename $0) [--compression 0-9] [--njobs N] [--logdir DIR]"
    echo "                             config scp out"
}

show_help() {
    show_usage
    echo ""
    echo "Extract speech features from <scp> into a HDF5 archive."
    echo ""
    echo "  --compression   compression level from 0 to 9 (default: $compression)"
    echo "  -h, --help      show this help message"
    echo "  --logdir        logging directory for the parallel environment (default: $logdir)"
    echo "  --njobs         number of parallel jobs (default: $njobs)"
}

. $SLAB_ROOT/utils/parse_options.sh

if [ $# -ne 3 ]; then
    show_usage 1>&2
    exit 1
fi

config=$1 && assert_not_missing $config
scp=$2 && assert_not_missing $scp
out=$3
odir=$(dirname $out)
mkdir -p $odir

if [ -f $out ]; then
    echo "The features are already extracted ($out)."
    exit 0
fi

echo "Extracting features from $scp to $out."

tmp=$(mktemp -d -p $odir)
trap 'rm -fr "$tmp"; trap - EXIT; exit' EXIT INT HUP
cwd=$(pwd)
cd $tmp
split -n l/$njobs $scp --numeric-suffixes=1
rename 's/x0+/x/' x*
cd $cwd

. $SLAB_ROOT/steps/features/parallel_env.sh
$parallel_cmd julia --project=$SLAB_ROOT/Project.toml \
    $SLAB_ROOT/steps/features/scripts/features.jl \
    -c $compression \
    $config \
    $tmp/x\$SGE_TASK_ID \
    $tmp/\$SGE_TASK_ID.h5

julia --project=$SLAB_ROOT/Project.toml \
    $SLAB_ROOT/steps/features/scripts/concat.jl \
    -c $compression \
    $out \
    $tmp/[1-9]*h5

