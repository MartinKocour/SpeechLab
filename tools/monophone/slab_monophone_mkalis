#!/bin/sh -e

# SPDX-License-Identifier: MIT

njobs=4



cmd=$(basename $0)
. $SLAB_ROOT/tools/utils/utils.sh

show_usage() {
    echo "usage: $cmd [options] <hmms> <lexicon> <trans> <out-alifsms>"
}

show_help() {
    show_usage
    echo ""
    echo "Build the alignments graphs."
    echo ""
    echo "  -h              show this help message"
    echo "  -n N            use N parallel jobs (default: $njobs)"
}

while :; do
    case "$1" in
        -h) show_help; exit 0;;
        -n) njobs=$2; shift;;
        -*)
            echo "Unknown option: $1. Try '$0 -h' for more informations."  1>&2
            echo "" 1>&2
            show_usage 1>&2
            exit 1;;
        *) break;;
    esac
    shift
done

if [ $# -ne 4 ]; then
    show_usage 1>&2
    exit 1
fi


hmms=$1 && assert_not_missing $scp
lexicon=$2 && assert_not_missing $config
trans=$3 && assert_not_missing $trans
out=$4

if [ -f $out ]; then
    echo "The alignemnt graphs are already prepared in $out."
    exit 0
fi

tmp=$(mktemp -d -p $(pwd))
trap 'rm -fr "$tmp"; trap - EXIT; exit' EXIT INT HUP
cwd=$(pwd)
cd $tmp
split -n l/$njobs $trans --numeric-suffixes=1
rename 's/x0+/x/' x*
cd $cwd

. $SLAB_ROOT/tools/monophone/parallel_env.sh
$parallel_cmd_alis julia --project=$SLAB_ROOT/Project.toml \
    $SLAB_ROOT/tools/monophone/scripts/makealis.jl \
    $hmms \
    $lexicon \
    $tmp/x\$SGE_TASK_ID \
    $tmp/\$SGE_TASK_ID.jld2


julia --project=$SLAB_ROOT/Project.toml \
    $SLAB_ROOT/tools/monophone/scripts/concatalis.jl \
    $out \
    $tmp/[1-9]*jld2

